{"version":3,"sources":["constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Session/context.js","components/Navigation/index.js","components/Footer/index.js","components/SignUp/index.js","components/SignIn/index.js","components/PasswordForget/index.js","components/Account/PasswordChangeForm.js","components/Account/DeleteUserForm.js","components/Account/index.js","components/HomeGrocery/index.js","images/bgSignInImg.jpg","components/App/index.js","index.js"],"names":["SIGN_IN","SIGN_UP","HOME","ACCOUNT","PASSWORD_FORGET","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","REACT_APP_MEASUREMENT_ID","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","accessCurrentUser","user","uid","db","ref","users","updateGroceryToDatabase","item","update","deleteGroceryItemFromDatabase","addImageToUserStorage","userUid","imageAsFile","storage","name","put","getUserImagesRef","app","initializeApp","this","database","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","AuthUserContext","Provider","value","withAuthorization","condition","WithAuthorization","history","push","ROUTES","compose","withRouter","CloseNavGLobalContext","NavigationAuth","openNav","toggleNav","className","Logo","onClick","ListItem","route","text","SignOutButton","NavigationNonAuth","useContext","closeNav","type","to","Navigation","useState","setOpenNav","outsideContentClick","e","target","closest","useEffect","window","addEventListener","removeEventListener","Footer","INITIAL_STATE","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","onChange","isInvalid","placeholder","disabled","message","SignUpForm","SignUpPage","SignInFormBase","style","textAlign","PasswordForgetLink","SignUpLink","SignInForm","SignInPage","success","PasswordForgetFormBase","PasswordForgetForm","PasswordForgetPage","PasswordChangeForm","setPasswordOne","setPasswordTwo","userEmail","a","delete","firebaseStorageImages","listAll","items","forEach","remove","console","initialGrocery","storeNames","food","amount","completed","initialNewFoodItems","storeName","HomeGroceryWithFirebase","data","setData","showNewGroceryListInputs","setShowNewGroceryListInputs","newFoodItems","setNewFoodItems","loadingData","setLoadingData","authUserUid","on","snapshot","userObject","val","toastifyNotification","notificationText","toast","theme","autoClose","clearWaitingQueue","onInputChange","listIndex","itemIndex","newInputData","newFood","newAmounts","parseInt","newStoreName","deleteGroceryList","filter","index","newAmount","newCompleted","onFirebaseSubmit","log","limit","padding","maxLength","autoFocus","autoComplete","map","document","getElementsByClassName","focus","focusOnCurrentStoreName","textDecoration","textDecorationThickness","borderLeft","itemChanging","completeGroceryItem","listItemIndex","length","splice","updatedFood","foodItem","updatedAmount","amountItem","updatedCompleted","completedItem","deleteGroceryItem","addGroceryItem","top","formInput","exact","path","component","AccountPage","HomeGrocery","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.52ea6507.chunk.js","sourcesContent":["export const SIGN_IN = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const HOME = \"/home\";\r\nexport const ACCOUNT = \"/account\";\r\nexport const PASSWORD_FORGET = \"/pw-forget\";\r\n","import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = (Component) => (props) => (\r\n  <FirebaseContext.Consumer>\r\n    {(firebase) => <Component {...props} firebase={firebase} />}\r\n  </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(firebaseConfig);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.storage = app.storage();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = (password) =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  accessCurrentUser = () => this.auth.currentUser;\r\n\r\n  // *** Database API ***\r\n  // ** Accessing users from database **\r\n  user = (uid) => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref(\"users\");\r\n\r\n  // ** CRUD functionality to database **\r\n  updateGroceryToDatabase = (uid, item) => this.user(uid).update({ item });\r\n\r\n  deleteGroceryItemFromDatabase = (uid, item) =>\r\n    this.user(uid).update({ item });\r\n\r\n  // *** Storage API ***\r\n  addImageToUserStorage = (userUid, imageAsFile) =>\r\n    this.storage.ref(`/images/${userUid}/${imageAsFile.name}`).put(imageAsFile);\r\n\r\n  getUserImagesRef = (userUid) => this.storage.ref(`images/${userUid}`);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","// Checks if user is authenticated. If user is true, setState to passed user. User is through firebase's authentication.\r\nimport React from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext } from \"./index\";\r\n\r\nconst withAuthentication = (Component) => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      const { authUser } = this.state;\r\n\r\n      return (\r\n        <AuthUserContext.Provider value={authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","// Checks if user is authenticated. If not then reroute to non authorized route. Else do nothing.\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { AuthUserContext } from \"./index\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {(authUser) =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport { AuthUserContext };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { AiOutlineMenu, AiOutlineClose } from \"react-icons/ai\";\r\n\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\n// Used in SignOutButton to allow Sign Out of firebase auth\r\nimport { FirebaseContext } from \"../Firebase\";\r\n\r\n// Use this as a global context to not prop drill through every level in order to get to ListItem\r\nconst CloseNavGLobalContext = React.createContext();\r\n\r\nfunction Navigation() {\r\n  // True if nav is open, false if closed\r\n  const [openNav, setOpenNav] = useState(false);\r\n\r\n  const authUser = useContext(AuthUserContext);\r\n\r\n  const toggleNav = () => setOpenNav(!openNav);\r\n\r\n  const closeNav = () => setOpenNav(false);\r\n\r\n  // If user clicks outside of nav when nav is open then close the nav\r\n  const outsideContentClick = (e) => {\r\n    if (!openNav) return;\r\n    const outsideNav = e.target.closest(\".nav\");\r\n    if (!outsideNav) {\r\n      closeNav();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If user resizes when nav is open close the nav\r\n    window.addEventListener(\"resize\", closeNav);\r\n    // If user clicks outside of nav when nav is open then close the nav\r\n    window.addEventListener(\"click\", outsideContentClick);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", closeNav);\r\n      window.removeEventListener(\"click\", outsideContentClick);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <CloseNavGLobalContext.Provider value={closeNav}>\r\n      {authUser ? (\r\n        <NavigationAuth openNav={openNav} toggleNav={toggleNav} />\r\n      ) : (\r\n        <NavigationNonAuth openNav={openNav} toggleNav={toggleNav} />\r\n      )}\r\n    </CloseNavGLobalContext.Provider>\r\n  );\r\n}\r\n\r\nfunction NavigationAuth({ openNav, toggleNav }) {\r\n  return (\r\n    <ul className=\"nav\">\r\n      <div className=\"nav-left\">\r\n        <Logo />\r\n      </div>\r\n      <div className=\"nav-menu\" onClick={toggleNav}>\r\n        {openNav ? <AiOutlineClose /> : <AiOutlineMenu />}\r\n      </div>\r\n      <div className={openNav ? \"nav-right nav-open\" : \"nav-right\"}>\r\n        <ListItem route={ROUTES.ACCOUNT} text=\"Account\" />\r\n        <ListItem route={ROUTES.HOME} text=\"Home Grocery\" />\r\n        <SignOutButton />\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction NavigationNonAuth({ openNav, toggleNav }) {\r\n  return (\r\n    <ul className=\"nav\">\r\n      <div className=\"nav-left\">\r\n        <Logo />\r\n      </div>\r\n      <div className=\"nav-menu\" onClick={toggleNav}>\r\n        {openNav ? <AiOutlineClose /> : <AiOutlineMenu />}\r\n      </div>\r\n      <div className={openNav ? \"nav-right nav-open\" : \"nav-right\"}>\r\n        <ListItem route={ROUTES.SIGN_IN} text=\"Sign In\" />\r\n        <ListItem route={ROUTES.PASSWORD_FORGET} text=\"Forget Password\" />\r\n        <ListItem route={ROUTES.SIGN_UP} text=\"Sign Up\" />\r\n      </div>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction SignOutButton() {\r\n  const firebase = useContext(FirebaseContext);\r\n  const closeNav = useContext(CloseNavGLobalContext);\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"button nav__list-link nav__sign-out-button\"\r\n      onClick={() => {\r\n        firebase.doSignOut();\r\n        closeNav();\r\n      }}\r\n    >\r\n      Sign Out\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Logo() {\r\n  const closeNav = useContext(CloseNavGLobalContext);\r\n  const authUser = useContext(AuthUserContext);\r\n  return (\r\n    <Link\r\n      to={authUser ? ROUTES.HOME : ROUTES.SIGN_IN}\r\n      className=\"nav__list-link nav-logo__link\"\r\n      onClick={closeNav}\r\n    >\r\n      <li className=\"nav__list-item nav-logo__item\">Grocery List</li>\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction ListItem({ route, text }) {\r\n  const closeNav = useContext(CloseNavGLobalContext);\r\n\r\n  return (\r\n    <Link to={route} className=\"nav__list-link\" onClick={closeNav}>\r\n      <li className=\"nav__list-item\">{text}</li>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer-content\">© 2021 Grocery List</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => {\r\n  return (\r\n    <div className=\"page__main-div\">\r\n      <div className=\"page-div-content\">\r\n        <h1 className=\"page-header\">Sign Up</h1>\r\n        <p className=\"page__desc\">Must fill out all fields!</p>\r\n        <SignUpForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then((authUser) => {\r\n        // Create a user in your Firebase realtime database\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          email,\r\n          uid: authUser.user.uid,\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === \"\" || email === \"\";\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n          className=\"form__input\"\r\n        />\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"form__input\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n          className=\"form__input\"\r\n        />\r\n        <button\r\n          className={\r\n            isInvalid\r\n              ? \"button form__button button--isInvalid\"\r\n              : \"button form__button\"\r\n          }\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n        >\r\n          Sign Up\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\n\r\nexport default SignUpPage;\r\n\r\nexport { SignUpForm };\r\n","import React, { Component } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nfunction SignInPage() {\r\n  return (\r\n    <div className=\"sign-in-page page__main-div\">\r\n      <div className=\"page-div-content\">\r\n        <h1 className=\"page-header\">Sign In</h1>\r\n        <SignInForm />\r\n        <PasswordForgetLink />\r\n        <SignUpLink />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email, password } = this.state;\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form className=\"form sign-in__form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n          className=\"form__input sign-in__form__input\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          className=\"form__input sign-in__form__input\"\r\n        />\r\n        <button\r\n          disabled={isInvalid}\r\n          className={\r\n            isInvalid\r\n              ? \"button form__button sign-in-button button--isInvalid\"\r\n              : \"button form__button sign-in-button\"\r\n          }\r\n          type=\"submit\"\r\n        >\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p style={{ textAlign: \"center\" }}>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nfunction PasswordForgetLink() {\r\n  return (\r\n    <Link className=\"button pw-forget__button\" to={ROUTES.PASSWORD_FORGET}>\r\n      Forgot Password?\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst SignUpLink = () => {\r\n  return (\r\n    <div className=\"sign-up-link__div\">\r\n      <p className=\"sign-up-link__p\">Don't have an account?</p>\r\n      <Link to={ROUTES.SIGN_UP} className=\"button sign-up__button\">\r\n        Sign Up\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SignInForm = withRouter(withFirebase(SignInFormBase));\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nfunction PasswordForgetPage() {\r\n  return (\r\n    <div className=\"page__main-div\">\r\n      <div className=\"page-div-content\">\r\n        <h1 className=\"page-header\">Password Forget</h1>\r\n        <h4 className=\"page__sub-header\">Trouble logging in?</h4>\r\n        <p className=\"page__desc\">\r\n          Enter your email address and we'll send you\r\n          <br></br> an email to get you back into your account!\r\n        </p>\r\n        <PasswordForgetForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE, success: true });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, success: false });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error, success } = this.state;\r\n\r\n    const isInvalid = email === \"\";\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          type=\"text\"\r\n          onChange={this.onChange}\r\n          placeholder=\"Email Address\"\r\n          className=\"form__input\"\r\n        />\r\n        <button\r\n          className={\r\n            isInvalid\r\n              ? \"button form__button button--isInvalid\"\r\n              : \"button form__button\"\r\n          }\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n        >\r\n          Reset My Password\r\n        </button>\r\n\r\n        {success && <p>An email has been sent!</p>}\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nexport { PasswordForgetForm };\r\n","import React, { Component } from \"react\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null,\r\n  success: false,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE, success: true });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error, success: false });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error, success } = this.state;\r\n\r\n    const isInvalid = passwordOne !== passwordTwo || passwordOne === \"\";\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          className=\"form__input\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n          className=\"form__input\"\r\n        />\r\n        <button\r\n          className={\r\n            isInvalid\r\n              ? \"button form__button button--isInvalid\"\r\n              : \"button form__button\"\r\n          }\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n        >\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n        {success && <p>Successfully changed password!</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React, { useContext, useState } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext } from \"../Session\";\r\n\r\nfunction DeleteUserForm(props) {\r\n  const [passwordOne, setPasswordOne] = useState(\"\");\r\n  const [passwordTwo, setPasswordTwo] = useState(\"\");\r\n  const authUser = useContext(AuthUserContext);\r\n\r\n  // Authenticed user uid and email\r\n  const userUid = authUser.uid;\r\n  const userEmail = authUser.email;\r\n\r\n  function handlePasswordOneChange(event) {\r\n    event.preventDefault();\r\n    setPasswordOne(event.target.value);\r\n  }\r\n\r\n  function handlePasswordTwoChange(event) {\r\n    event.preventDefault();\r\n    setPasswordTwo(event.target.value);\r\n  }\r\n\r\n  async function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      // Deletes authenticated user\r\n      const authenticatedUser = await props.firebase.accessCurrentUser();\r\n      authenticatedUser.delete();\r\n\r\n      // Deletes storage images\r\n      const firebaseStorageImages = await props.firebase.getUserImagesRef(\r\n        userUid\r\n      );\r\n      const allImages = await firebaseStorageImages.listAll();\r\n      allImages.items.forEach((item) => {\r\n        item.delete();\r\n      });\r\n\r\n      // Deletes database data\r\n      const firebaseDatabaseUser = await props.firebase.user(userUid);\r\n      firebaseDatabaseUser.remove();\r\n\r\n      props.history.push(\"/\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  const isInvalid =\r\n    passwordOne !== passwordTwo ||\r\n    passwordOne === \"\" ||\r\n    passwordOne !== userEmail;\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmit}>\r\n      <input\r\n        name=\"passwordOne\"\r\n        value={passwordOne}\r\n        onChange={handlePasswordOneChange}\r\n        type=\"password\"\r\n        placeholder=\"Enter Email\"\r\n        className=\"form__input\"\r\n      />\r\n      <input\r\n        name=\"passwordTwo\"\r\n        value={passwordTwo}\r\n        onChange={handlePasswordTwoChange}\r\n        type=\"password\"\r\n        placeholder=\"Confirm Email\"\r\n        className=\"form__input\"\r\n      />\r\n      <button\r\n        className={\r\n          isInvalid\r\n            ? \"button form__button button--danger button--isInvalid\"\r\n            : \"button form__button button--danger\"\r\n        }\r\n        disabled={isInvalid}\r\n        type=\"submit\"\r\n      >\r\n        Delete Account\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default withRouter(withFirebase(DeleteUserForm));\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nimport PasswordChangeForm from \"./PasswordChangeForm\";\r\nimport DeleteUserForm from \"./DeleteUserForm\";\r\n\r\nfunction AccountPage(props) {\r\n  const authUser = useContext(AuthUserContext);\r\n\r\n  return (\r\n    <div className=\"account-page\">\r\n      <h1 className=\"page-header\">Account Page</h1>\r\n      <p className=\"page__desc\">Account: {authUser.email}</p>\r\n\r\n      <p className=\"page__desc\">Change Password?</p>\r\n      <PasswordChangeForm />\r\n\r\n      <h1 className=\"page-header\">Delete Account!</h1>\r\n      <p className=\"page__desc\">\r\n        Deleting account will delete <strong>everything</strong> to do with the\r\n        account! There is no going back.\r\n      </p>\r\n\r\n      <p className=\"page__desc\">\r\n        Enter your email and re-enter email to confirm deletion of account.\r\n      </p>\r\n      <DeleteUserForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst condition = (authUser) => authUser != null;\r\n\r\nexport default withFirebase(withAuthorization(condition)(AccountPage));\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { AuthUserContext, withAuthorization } from \"../Session\";\r\nimport { AiOutlineClose, AiOutlineCheck, AiFillEdit } from \"react-icons/ai\";\r\n\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\n// data set up for grocery list\r\nconst initialGrocery = {\r\n  storeNames: [],\r\n  food: [],\r\n  amount: [],\r\n  completed: [],\r\n};\r\n\r\nconst initialNewFoodItems = {\r\n  storeName: \"\",\r\n  food: [],\r\n  amount: [],\r\n  error: false,\r\n};\r\n\r\nfunction Home() {\r\n  return <HomeGroceryWithFirebase />;\r\n}\r\n\r\nfunction HomeGroceryForm(props) {\r\n  const [data, setData] = useState(initialGrocery);\r\n  const [showNewGroceryListInputs, setShowNewGroceryListInputs] =\r\n    useState(false);\r\n\r\n  const [newFoodItems, setNewFoodItems] = useState(initialNewFoodItems);\r\n  const [loadingData, setLoadingData] = useState(true);\r\n\r\n  const displayNewGroceryListInputs = () => {\r\n    setShowNewGroceryListInputs(true);\r\n  };\r\n\r\n  const hideNewGroceryListInputs = () => {\r\n    setShowNewGroceryListInputs(false);\r\n  };\r\n\r\n  // Authorized user context\r\n  const authUser = useContext(AuthUserContext);\r\n  const authUserUid = authUser.uid;\r\n\r\n  useEffect(() => {\r\n    props.firebase.user(authUser.uid).on(\"value\", (snapshot) => {\r\n      const userObject = snapshot.val();\r\n\r\n      const savedFoodItems = userObject.item;\r\n\r\n      if (savedFoodItems) setData(userObject.item);\r\n\r\n      setLoadingData(false);\r\n    });\r\n  }, []);\r\n\r\n  // toastify notification\r\n  const toastifyNotification = (notificationText) => {\r\n    toast(notificationText, {\r\n      theme: \"dark\",\r\n      autoClose: 2000,\r\n    });\r\n\r\n    // removes toast queue if exists\r\n    toast.clearWaitingQueue();\r\n  };\r\n\r\n  const onNewGroceryListInputChange = (e) => {\r\n    const newInputData = e.target.value;\r\n\r\n    setNewFoodItems({ ...newFoodItems, storeName: newInputData });\r\n  };\r\n\r\n  const onInputChange = (e, listIndex, itemIndex) => {\r\n    // changing food item\r\n    const newInputData = e.target.value;\r\n\r\n    if (e.target.name == \"food\") {\r\n      let newFood = [...data.food];\r\n\r\n      newFood[listIndex][itemIndex] = newInputData;\r\n\r\n      setData({ ...data, food: newFood });\r\n    }\r\n    // changing amount\r\n    else if (e.target.name == \"amount\") {\r\n      let newAmounts = [...data.amount];\r\n\r\n      newAmounts[listIndex][itemIndex] = parseInt(newInputData);\r\n\r\n      setData({ ...data, amount: newAmounts });\r\n    }\r\n    // changing storeName\r\n    else {\r\n      let newStoreName = [...data.storeNames];\r\n\r\n      newStoreName[listIndex] = newInputData;\r\n\r\n      setData({ ...data, storeNames: newStoreName });\r\n    }\r\n  };\r\n\r\n  const focusOnCurrentStoreName = (listIndex) => {\r\n    const activeStoreName = document.getElementsByClassName(\r\n      \"grocery-list-name-input\"\r\n    )[listIndex];\r\n\r\n    activeStoreName.focus();\r\n  };\r\n\r\n  const createNewGroceryList = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newStoreName = newFoodItems.storeName;\r\n    const newFood = newFoodItems.food;\r\n    const newAmount = parseInt(newFoodItems.amount);\r\n    const newCompleted = false;\r\n\r\n    if (!newStoreName || !newFood) {\r\n      setNewFoodItems({ ...newFoodItems, error: true });\r\n      return;\r\n    }\r\n\r\n    let storeNames = data.storeNames;\r\n    let food = data.food;\r\n    let amount = data.amount;\r\n    let completed = data.completed;\r\n\r\n    // make it so you can add whatever name you want and food item(s) so you can then push into firebase as opposed to hard coding something like target.\r\n    storeNames.push(newStoreName);\r\n    food.push([newFood]);\r\n    amount.push([newAmount]);\r\n    completed.push([newCompleted]);\r\n\r\n    toastifyNotification(\"New Grocery List Created!\");\r\n\r\n    setShowNewGroceryListInputs(false);\r\n    setData({ storeNames, food, amount, completed });\r\n  };\r\n\r\n  const addGroceryItem = (e, listIndex) => {\r\n    const newFood = [...data.food[listIndex]];\r\n    const newAmount = [...data.amount[listIndex]];\r\n    const newCompleted = [...data.completed[listIndex]];\r\n\r\n    newFood.push(\"\");\r\n    newAmount.push(0);\r\n    newCompleted.push(false);\r\n\r\n    // if index matches listIndex in data array then return new updated array else return untouched arrays\r\n    const updatedFood = data.food.map((foodItem, index) => {\r\n      if (index == listIndex) return newFood;\r\n      return foodItem;\r\n    });\r\n\r\n    const updatedAmount = data.amount.map((amountItem, index) => {\r\n      if (index == listIndex) return newAmount;\r\n      return amountItem;\r\n    });\r\n\r\n    const updatedCompleted = data.completed.map((completedItem, index) => {\r\n      if (index == listIndex) return newCompleted;\r\n      return completedItem;\r\n    });\r\n\r\n    toastifyNotification(\"New Item Added to List!\");\r\n\r\n    setData({\r\n      ...data,\r\n      food: updatedFood,\r\n      amount: updatedAmount,\r\n      completed: updatedCompleted,\r\n    });\r\n  };\r\n\r\n  const deleteGroceryList = async (listIndex) => {\r\n    let storeNames = data.storeNames;\r\n    let food = data.food;\r\n    let amount = data.amount;\r\n    let completed = data.completed;\r\n\r\n    const newStoreName = storeNames.filter((item, index) => {\r\n      return index != listIndex;\r\n    });\r\n\r\n    const newFood = food.filter((item, index) => {\r\n      return index != listIndex;\r\n    });\r\n\r\n    const newAmount = amount.filter((item, index) => {\r\n      return index != listIndex;\r\n    });\r\n\r\n    const newCompleted = completed.filter((item, index) => {\r\n      return index != listIndex;\r\n    });\r\n\r\n    toastifyNotification(\"Successfully deleted.\");\r\n\r\n    setData({\r\n      storeNames: newStoreName,\r\n      food: newFood,\r\n      amount: newAmount,\r\n      completed: newCompleted,\r\n    });\r\n  };\r\n\r\n  const deleteGroceryItem = (listIndex, listItemIndex) => {\r\n    const newFood = [...data.food[listIndex]];\r\n    const newAmount = [...data.amount[listIndex]];\r\n    const newCompleted = [...data.completed[listIndex]];\r\n\r\n    if (newFood.length == 1) {\r\n      toastifyNotification(\"Delete list in order to delete item.\");\r\n      return;\r\n    }\r\n\r\n    newFood.splice(listItemIndex, 1);\r\n    newAmount.splice(listItemIndex, 1);\r\n    newCompleted.splice(listItemIndex, 1);\r\n\r\n    // // if index matches listIndex in data array then return new updated array else return untouched arrays\r\n    const updatedFood = data.food.map((foodItem, index) => {\r\n      if (index == listIndex) return newFood;\r\n      return foodItem;\r\n    });\r\n\r\n    const updatedAmount = data.amount.map((amountItem, index) => {\r\n      if (index == listIndex) return newAmount;\r\n      return amountItem;\r\n    });\r\n\r\n    const updatedCompleted = data.completed.map((completedItem, index) => {\r\n      if (index == listIndex) return newCompleted;\r\n      return completedItem;\r\n    });\r\n\r\n    toastifyNotification(\"Deleted Item from List!\");\r\n\r\n    setData({\r\n      ...data,\r\n      food: updatedFood,\r\n      amount: updatedAmount,\r\n      completed: updatedCompleted,\r\n    });\r\n  };\r\n\r\n  const completeGroceryItem = (e, listIndex, itemIndex) => {\r\n    let itemChanging = data.completed[listIndex][itemIndex];\r\n\r\n    // if grocery item is already completed (true) then set it to false and change state, vice versa if it is not completed (false)\r\n    if (itemChanging == true) {\r\n      itemChanging = false;\r\n      let newCompleted = [...data.completed];\r\n      newCompleted[listIndex][itemIndex] = itemChanging;\r\n      setData({ ...data, completed: newCompleted });\r\n    } else {\r\n      itemChanging = true;\r\n      let newCompleted = [...data.completed];\r\n      newCompleted[listIndex][itemIndex] = itemChanging;\r\n      setData({ ...data, completed: newCompleted });\r\n    }\r\n  };\r\n\r\n  const onFirebaseSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await props.firebase.updateGroceryToDatabase(authUserUid, data);\r\n      toastifyNotification(\"Lists Saved!\");\r\n    } catch (err) {\r\n      console.error(err);\r\n      console.log(\"error in submit to firebase function\");\r\n    }\r\n  };\r\n\r\n  // saves data to firebase when user leaves page by either closing page or reload\r\n  window.addEventListener(\"beforeunload\", (e) => {\r\n    onFirebaseSubmit(e);\r\n  });\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <ToastContainer limit=\"3\" />\r\n      {showNewGroceryListInputs && (\r\n        <div className=\"home-new-grocery-list\">\r\n          <div className=\"home-new-grocery-list-wrapper\">\r\n            <AiOutlineClose\r\n              className=\"home-new-grocery-list-close\"\r\n              onClick={hideNewGroceryListInputs}\r\n            />\r\n\r\n            <form\r\n              className=\"home-new-grocery-list-input-form\"\r\n              onSubmit={createNewGroceryList}\r\n            >\r\n              <div className=\"home-new-grocery-list-input-content\">\r\n                <h2 style={{ padding: \"10px 0\" }}>New Store Name</h2>\r\n                <input\r\n                  className=\"home-new-grocery-list-input\"\r\n                  type=\"text\"\r\n                  name=\"storeName\"\r\n                  maxLength=\"10\"\r\n                  autoFocus\r\n                  onChange={onNewGroceryListInputChange}\r\n                  autoComplete=\"off\"\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                className=\"grocery-list-button home-new-grocery-list-button button\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </button>\r\n\r\n              {newFoodItems.error && (\r\n                <p>All inputs need to be filled out to submit.</p>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"home-lists-container\">\r\n        {loadingData && <p>Loading...</p>}\r\n        {!loadingData && (\r\n          <>\r\n            <div className=\"grocery-lists\">\r\n              {/* maps through all names which correspond to each list that will be made  */}\r\n              {data.storeNames.map((storeName, listIndex) => {\r\n                return (\r\n                  <div className=\"grocery-list\">\r\n                    <div className=\"grocery-list-no-add-button-content\">\r\n                      <div className=\"grocery-list-header-content\">\r\n                        <AiFillEdit\r\n                          className=\"grocery-list-edit\"\r\n                          onClick={() => focusOnCurrentStoreName(listIndex)}\r\n                        />\r\n                        <input\r\n                          value={data.storeNames[listIndex]}\r\n                          className=\"grocery-list-name-input\"\r\n                          name=\"storeName\"\r\n                          maxLength=\"10\"\r\n                          autoComplete=\"off\"\r\n                          onChange={(e) => onInputChange(e, listIndex)}\r\n                        />\r\n                        <AiOutlineClose\r\n                          onClick={() => deleteGroceryList(listIndex)}\r\n                          className=\"grocery-list-delete\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"grocery-list-inputs-labels\">\r\n                        <h5 className=\"grocery-list-input-label\">Item</h5>\r\n                        <h5 className=\"grocery-list-input-label\">Amount</h5>\r\n                      </div>\r\n\r\n                      {/* maps through each item in food and amount and creates an input w/ up & down arror to change input */}\r\n                      {data.food[listIndex].map((item, itemIndex) => {\r\n                        return (\r\n                          <div className=\"grocery-item\">\r\n                            <input\r\n                              style={\r\n                                data.completed[listIndex][itemIndex]\r\n                                  ? {\r\n                                      textDecoration: \"line-through\",\r\n                                      textDecorationThickness: \"3px\",\r\n                                    }\r\n                                  : {}\r\n                              }\r\n                              className=\"list-item-input item-name\"\r\n                              name=\"food\"\r\n                              autoComplete=\"off\"\r\n                              type=\"text\"\r\n                              value={item}\r\n                              // focuses on the input when addGroceryItem gets called\r\n                              autoFocus\r\n                              onChange={(e) =>\r\n                                onInputChange(e, listIndex, itemIndex)\r\n                              }\r\n                            />\r\n\r\n                            <input\r\n                              style={\r\n                                data.completed[listIndex][itemIndex]\r\n                                  ? {\r\n                                      borderLeft: \"1px solid white\",\r\n                                      textDecoration: \"line-through\",\r\n                                      textDecorationThickness: \"3px\",\r\n                                    }\r\n                                  : { borderLeft: \"1px solid white\" }\r\n                              }\r\n                              className=\"list-item-input item-amount\"\r\n                              name=\"amount\"\r\n                              type=\"number\"\r\n                              value={data.amount[listIndex][itemIndex]}\r\n                              onChange={(e) =>\r\n                                onInputChange(e, listIndex, itemIndex)\r\n                              }\r\n                            />\r\n                            <AiOutlineCheck\r\n                              onClick={(e) =>\r\n                                completeGroceryItem(e, listIndex, itemIndex)\r\n                              }\r\n                              className=\"grocery-item-check grocery-item-extra\"\r\n                            />\r\n                            <AiOutlineClose\r\n                              onClick={() =>\r\n                                deleteGroceryItem(listIndex, itemIndex)\r\n                              }\r\n                              className=\"grocery-item-delete grocery-item-extra\"\r\n                            />\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                    <button\r\n                      className=\"grocery-list-add-item grocery-list-button button\"\r\n                      onClick={(e) => addGroceryItem(e, listIndex)}\r\n                    >\r\n                      Add New Item\r\n                    </button>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"grocery-list-outside-list-buttons\">\r\n              <button\r\n                className=\"grocery-list-add-new-list grocery-list-button button\"\r\n                onClick={displayNewGroceryListInputs}\r\n              >\r\n                Add New Grocery List\r\n              </button>\r\n\r\n              <button\r\n                className=\"grocery-list-save-lists grocery-list-button button\"\r\n                onClick={(e) => onFirebaseSubmit(e)}\r\n              >\r\n                Save Lists\r\n              </button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HomeGroceryWithFirebase = withFirebase(HomeGroceryForm);\r\n\r\nconst condition = (authUser) => authUser != null;\r\n\r\nexport default withAuthorization(condition)(Home);\r\n","export default __webpack_public_path__ + \"static/media/bgSignInImg.7d023ead.jpg\";","import React, { useContext, useEffect } from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\nimport Navigation from \"../Navigation\";\r\nimport Footer from \"../Footer\";\r\nimport SignUpPage from \"../SignUp\";\r\nimport SignInPage from \"../SignIn\";\r\nimport PasswordForgetPage from \"../PasswordForget\";\r\nimport AccountPage from \"../Account\";\r\n\r\nimport HomeGrocery from \"../HomeGrocery\";\r\n\r\nimport bgSignInImg from \"../../images/bgSignInImg.jpg\";\r\n\r\nimport { AuthUserContext } from \"../Session\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withAuthentication } from \"../Session\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nfunction App({ firebase }) {\r\n  // checks if user is logged in, if so get rid of left container that's in non-signed in pages\r\n  const authUser = useContext(AuthUserContext);\r\n\r\n  // Signs user out when exits the page\r\n  window.addEventListener(\"beforeunload\", async () => {\r\n    await firebase.doSignOut();\r\n  });\r\n\r\n  // focuses on input if on sign in page, if not on sign in page then shoudl reroute to it but doesn't focus on input\r\n  const focusOnInput = (e) => {\r\n    const formInput = document.getElementsByClassName(\r\n      \"sign-in__form__input\"\r\n    )[0];\r\n\r\n    if (formInput) formInput.focus();\r\n  };\r\n\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n  // fix page when screen gets larger\r\n\r\n  return (\r\n    <>\r\n      {!authUser && (\r\n        <div className=\"non-logged-in-left-img-container\">\r\n          <div className=\"non-logged-in-text-content\">\r\n            <h4 style={{ top: \"-100px\" }} className=\"non-logged-in-text\">\r\n              <span className=\"non-logged-in-text-span\">\r\n                Create, Check, Update\r\n              </span>\r\n            </h4>\r\n            <h4 style={{ top: \"-50px\" }} className=\"non-logged-in-text\">\r\n              <br></br>Grocery Lists<br></br> now just clicks away!\r\n            </h4>\r\n            <Link\r\n              style={{ top: \"90px\" }}\r\n              to={ROUTES.SIGN_IN}\r\n              onClick={focusOnInput}\r\n              className=\"button sign-up__button non-logged-in-left-button\"\r\n            >\r\n              Sign In Now\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        className={authUser ? \"container container__logged-in\" : \"container\"}\r\n      >\r\n        <div className=\"no-footer-content\">\r\n          <Navigation />\r\n\r\n          <div className=\"no-navigation-footer-content\">\r\n            <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n            <Route\r\n              path={ROUTES.PASSWORD_FORGET}\r\n              component={PasswordForgetPage}\r\n            />\r\n            <Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n            <Route path={ROUTES.HOME} component={HomeGrocery} />\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withFirebase(withAuthentication(App));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport App from \"./components/App\";\r\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <Router basename=\"/grocery-list\">\r\n      <App />\r\n    </Router>\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}